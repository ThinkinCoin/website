{"version":3,"sources":["refund.js"],"names":["$","document","ready","let","firstRefundClick","on","refundApiProcess","window","CryptoPayApp","events","add","async","order","await","refund_amount","amount","refundAmount","refundPaymentAmount","paymentAmount","then","cpHelpers","successPopup","CP_REFUND","lang","refundSuccessMsg","disableScreen","location","reload","waitingPopup","CryptoPayLang","redirecting","startedApp","off","e","preventDefault","jQuery","this","is","CryptoPayVars","alert","orderNotRefundable","block","message","overlayCSS","background","opacity","confirm","woocommerce_admin_meta_boxes","i18n_do_refund","val","refund_reason","refunded_amount","unblock","refundAmountRequired","line_item_qtys","line_item_totals","line_item_tax_totals","data","each","index","item","closest","value","accounting","unformat","woocommerce_admin","mon_decimal_point","tax_id","action","order_id","post_id","JSON","stringify","api_refund","restock_refunded_items","length","security","order_item_nonce","customData","Promise","filterData","handle","filteredData","triggerHandler","ajax","url","ajax_url","Object","assign","type","success","response","resolve","error","find","empty","append","removeAttr","tipTip","attribute","fadeIn","fadeOut","delay","keepAlive","stupidtable","event","th","arrow","direction","column","remove","eq","complete","wcTracks","recordEvent","status","has_reason","Boolean","restock","refundableAmount","parseFloat","msg","refundAmountExceedMsg","replace","currency","CryptoPayModal","open","params","receiver","CryptoPayConfig","init","discountRates","store","payment","setOrderParams","start"],"mappings":"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","file":"refund.min.js","sourcesContent":[";(($) => {\n    $(document).ready(() => {\n        let firstRefundClick = false;\n        $('#woocommerce-order-items').on('click', 'button.refund-items', function() {\n            if (!firstRefundClick) {\n                firstRefundClick = true;\n                // function will be set line 106\n                let refundApiProcess;\n\n                // Refund API\n                window.CryptoPayApp?.events.add('transactionReceived', async ({order}) => {\n                    await refundApiProcess({\n                        refund_amount: order.amount,\n                        refundAmount: order.amount,\n                        refundPaymentAmount: order.paymentAmount,\n                    }).then(() => {\n                        cpHelpers.successPopup(CP_REFUND.lang.refundSuccessMsg).then(() => {\n                            cpHelpers.disableScreen();\n                            window.location.reload();\n                            cpHelpers.waitingPopup(CryptoPayLang.redirecting);\n                        });\n                    });\n                }, 'wc_refund');\n\n                let startedApp;\n                const autoStarter = (amount) => {\n                    let order = {\n                        amount: parseFloat(amount),\n                        currency: CryptoPayVars.order.currency,\n                    }\n\n                    let params = {\n                        receiver: CryptoPayConfig.init.receiver,\n                        discountRates: CryptoPayConfig.discountRates\n                    }\n                    \n                    if (!startedApp) {\n                        startedApp = CryptoPayApp.start(order, params);\n                    } else {\n                        startedApp.store.payment.setOrderParams(order);\n                    }\n                }\n\n                $('#woocommerce-order-items').off('click', 'button.do-api-refund, button.do-manual-refund');\n                $('#woocommerce-order-items').on('click', 'button.do-api-refund, button.do-manual-refund', function (e) {\n                    e.preventDefault();\n\n                    if (jQuery( this ).is( '.do-api-refund' ) && !window.CryptoPayVars) {\n                        return alert(CP_REFUND.lang.orderNotRefundable);\n                    }\n\n                    function block() {\n                        $('#woocommerce-order-items').block({\n                            message: null,\n                            overlayCSS: {\n                                background: '#fff',\n                                opacity: 0.6\n                            }\n                        });\n                    }\n\n                    block();\n\n                    if ( window.confirm( woocommerce_admin_meta_boxes.i18n_do_refund ) ) {\n                        var refund_amount   = $( 'input#refund_amount' ).val();\n                        var refund_reason   = $( 'input#refund_reason' ).val();\n                        var refunded_amount = $( 'input#refunded_amount' ).val();\n\n                        if (!refund_amount) {\n                            $('#woocommerce-order-items').unblock();\n                            return window.alert(CP_REFUND.lang.refundAmountRequired);\n                        }\n\n                        // Get line item refunds\n                        var line_item_qtys       = {};\n                        var line_item_totals     = {};\n                        var line_item_tax_totals = {};\n\n                        $( '.refund input.refund_order_item_qty' ).each(function( index, item ) {\n                            if ( $( item ).closest( 'tr' ).data( 'order_item_id' ) ) {\n                                if ( item.value ) {\n                                    line_item_qtys[ $( item ).closest( 'tr' ).data( 'order_item_id' ) ] = item.value;\n                                }\n                            }\n                        });\n\n                        $( '.refund input.refund_line_total' ).each(function( index, item ) {\n                            if ( $( item ).closest( 'tr' ).data( 'order_item_id' ) ) {\n                                line_item_totals[ $( item ).closest( 'tr' ).data( 'order_item_id' ) ] = accounting.unformat(\n                                    item.value,\n                                    woocommerce_admin.mon_decimal_point\n                                );\n                            }\n                        });\n\n                        $( '.refund input.refund_line_tax' ).each(function( index, item ) {\n                            if ( $( item ).closest( 'tr' ).data( 'order_item_id' ) ) {\n                                var tax_id = $( item ).data( 'tax_id' );\n\n                                if ( ! line_item_tax_totals[ $( item ).closest( 'tr' ).data( 'order_item_id' ) ] ) {\n                                    line_item_tax_totals[ $( item ).closest( 'tr' ).data( 'order_item_id' ) ] = {};\n                                }\n\n                                line_item_tax_totals[ $( item ).closest( 'tr' ).data( 'order_item_id' ) ][ tax_id ] = accounting.unformat(\n                                    item.value,\n                                    woocommerce_admin.mon_decimal_point\n                                );\n                            }\n                        });\n\n                        var data = {\n                            action                : 'woocommerce_refund_line_items',\n                            order_id              : woocommerce_admin_meta_boxes.post_id,\n                            refund_amount         : refund_amount,\n                            refunded_amount       : refunded_amount,\n                            refund_reason         : refund_reason,\n                            line_item_qtys        : JSON.stringify( line_item_qtys, null, '' ),\n                            line_item_totals      : JSON.stringify( line_item_totals, null, '' ),\n                            line_item_tax_totals  : JSON.stringify( line_item_tax_totals, null, '' ),\n                            api_refund            : $( this ).is( '.do-api-refund' ),\n                            restock_refunded_items: $( '#restock_refunded_items:checked' ).length ? 'true': 'false',\n                            security              : woocommerce_admin_meta_boxes.order_item_nonce\n                        };\n\n                        refundApiProcess = (customData = {}) => {\n                            return new Promise((resolve) => {\n                                function filterData( handle, data ) {\n                                    const filteredData = $( '#woocommerce-order-items' )\n                                        .triggerHandler(\n                                            `woocommerce_order_meta_box_${handle}_ajax_data`,\n                                            [ data ]\n                                        );\n                        \n                                    if ( filteredData ) {\n                                        return filteredData;\n                                    }\n                        \n                                    return data;\n                                }\n            \n                                function reloadItems() {\n                                    var data = {\n                                        order_id: woocommerce_admin_meta_boxes.post_id,\n                                        action:   'woocommerce_load_order_items',\n                                        security: woocommerce_admin_meta_boxes.order_item_nonce\n                                    };\n                        \n                                    data = filterData( 'reload_items', data );\n                        \n                                    block();\n                        \n                                    $.ajax({\n                                        url:  woocommerce_admin_meta_boxes.ajax_url,\n                                        data: data,\n                                        type: 'POST',\n                                        success: function( response ) {\n                                            $( '#woocommerce-order-items' ).find( '.inside' ).empty();\n                                            $( '#woocommerce-order-items' ).find( '.inside' ).append( response );\n                                            $( '#tiptip_holder' ).removeAttr( 'style' );\n                                            $( '#tiptip_arrow' ).removeAttr( 'style' );\n                                            $( '.tips' ).tipTip({\n                                                'attribute': 'data-tip',\n                                                'fadeIn': 50,\n                                                'fadeOut': 50,\n                                                'delay': 200,\n                                                'keepAlive': true\n                                            });\n                                            $( '.woocommerce_order_items' ).stupidtable();\n                                            $( '.woocommerce_order_items' ).on( 'aftertablesort', function( event, data ) {\n                                                var th    = $( this ).find( 'th' );\n                                                var arrow = data.direction === 'asc' ? '&uarr;' : '&darr;';\n                                                var index = data.column;\n                                                th.find( '.wc-arrow' ).remove();\n                                                th.eq( index ).append( '<span class=\"wc-arrow\">' + arrow + '</span>' );\n                                            });\n                                            $('#woocommerce-order-items').unblock();\n                                        }\n                                    });\n                                }\n            \n                                data = filterData( 'do_refund', data );\n            \n                                $.ajax( {\n                                    url:     woocommerce_admin_meta_boxes.ajax_url,\n                                    data:    Object.assign(data, customData),   \n                                    type:    'POST',\n                                    success: function( response ) {\n                                        if ( true === response.success ) {\n                                            resolve(true);\n                                        } else {\n                                            window.alert( response.data.error );\n                                            reloadItems();\n                                            $('#woocommerce-order-items').unblock();\n                                        }\n                                    },\n                                    complete: function() {\n                                        window.wcTracks.recordEvent( 'order_edit_refunded', {\n                                            order_id: data.order_id,\n                                            status: $( '#order_status' ).val(),\n                                            api_refund: data.api_refund,\n                                            has_reason: Boolean( data.refund_reason.length ),\n                                            restock: 'true' === data.restock_refunded_items\n                                        } );\n                                    }\n                                } );\n                            });\n                        }\n\n                        if (window.CryptoPayVars && CP_REFUND.refundableAmount < parseFloat(data.refund_amount)) {\n                            $('#woocommerce-order-items').unblock();\n                            let msg = CP_REFUND.lang.refundAmountExceedMsg;\n                            msg = msg.replace('{amount}', CP_REFUND.refundableAmount);\n                            msg = msg.replace('{currency}', CryptoPayVars.order.currency);\n                            return window.alert( msg );\n                        }\n\n                        if (data.api_refund) {\n                            CryptoPayModal.open();\n                            $(document).on('cpModalClosed', function() {\n                                $('#woocommerce-order-items').unblock();\n                            });\n                            autoStarter(parseFloat(data.refund_amount));\n                        } else {\n                            refundApiProcess({\n                                refundAmount: data.refund_amount,\n                            }).then(() => {\n                                window.location.reload();\n                            });\n                        }\n                        \n                    } else {\n                        $('#woocommerce-order-items').unblock();\n                    }\n                });\n            }\n        });\n    });\n})(jQuery);"]}