{"version":3,"sources":["main.js"],"names":["$","document","ready","params","window","CryptoPayLang","CryptoPayConfig","lang","cpTyping","CryptoPayApp","InitCryptoPay","Boolean","CryptoPayVars","order","autoStart","start","CryptoPayModal","open","css","trigger","close","hide","on","e","target","customElements","get","template","createElement","innerHTML","CPPoweredBy","HTMLElement","constructor","super","this","attachShadow","mode","shadowRoot","appendChild","content","cloneNode","define","sanctions","status","events","add","async","network","wallet","connectedAccount","supports","includes","code","cpHelpers","waitingPopup","checkingSanctions","apiUrl","result","await","fetch","then","response","json","data","catch","error","sanctioned","message","let","msg","sanctionedMessage","source","replace","closePopup","instant","length","symbol","html","quantity","val","total","parseFloat","amount","toFixed","decimals","startedApp","errorPopup","instantPaymentMsg","productId","currency","reStart","jQuery"],"mappings":"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","file":"main.min.js","sourcesContent":[";(($) => {\n    $(document).ready(() => {\n        // set vars\n        window.CryptoPayLang = CryptoPayConfig.lang;\n        window.CryptoPayConfig = window.cpTyping(CryptoPayConfig);\n        window.CryptoPayApp = InitCryptoPay('cryptopay', CryptoPayConfig);\n\n        // auto start, if order exists and autoStart is true\n        if (Boolean(window.CryptoPayVars?.order && window.CryptoPayVars?.autoStart)) {\n            const params = window.CryptoPayVars?.params || {};\n            window.CryptoPayApp.start(window.CryptoPayVars.order, params);\n        }\n\n        // methods\n        window.CryptoPayModal = {\n            open: ()  => {\n                $(\".cp-modal\").css('display', 'flex');\n                $(document).trigger('cpModaOpened');\n            },\n            close: () => {\n                $(\".cp-modal\").hide();\n                $(document).trigger('cpModalClosed');\n            }\n        }\n\n        // events\n        $(window).on('click', function(e) {\n            if (e.target == $(\".cp-modal\")[0]) {\n                CryptoPayModal.close();\n            }\n        });\n        \n        $(document).on('click', '.cp-modal-close', function() {\n            CryptoPayModal.close();\n        });\n\n        if (!window.customElements.get('cp-powered-by')) {\n            const template = document.createElement('template');\n            template.innerHTML = `\n                <div class=\"footer\">\n                    <span class=\"powered-by\">\n                        Powered by\n                    </span>\n                    <a href=\"https://beycanpress.com/cryptopay?utm_source=powered_by&utm_medium=web_component\" target=\"_blank\">CryptoPay</a>\n                </div>\n                <style>\n                    .footer {\n                        display: flex;\n                        font-size: 14px;\n                        padding: 20px 30px;\n                        padding-bottom: 0px;\n                        justify-content: center;\n                        font-family: Arial, Helvetica, sans-serif;\n                    }\n                    .footer a {\n                        font-weight: 600;\n                        color: #7F7F7F;\n                        text-decoration: none;\n                    }\n                    .footer .powered-by {\n                        color: #7F7F7F;\n                        font-weight: 400;\n                        margin-right: 5px;\n                    }\n                </style>\n            `;\n            \n            class CPPoweredBy extends HTMLElement {\n                constructor(){\n                    super();\n                    this.attachShadow({ mode: 'open'});\n                    this.shadowRoot.appendChild(template.content.cloneNode(true));\n                } \n            }\n\n            window.customElements.define('cp-powered-by', CPPoweredBy);\n        }\n\n        // include libs\n\n        ;(() => {\n        \n            const sanctions = CryptoPayVars.sanctions;\n        \n            const checkSanctions = async (address) => {\n                let apiUrl = CryptoPayVars.apiUrl;\n                apiUrl += '/sanctions&address=' + address;\n        \n                return fetch(apiUrl)\n                .then((response) => {\n                    return response.json();\n                }).then((response) => {\n                    return response.data;\n                }).catch((error) => {\n                    return {\n                        error: true,\n                        sanctioned: false,\n                        message: error.message\n                    }\n                });\n            }\n        \n            if (sanctions && sanctions.status && sanctions.mode == 'restrict') {\n                CryptoPayApp.events.add('walletConnectionApproved', async ({network, wallet: {connectedAccount}}) => {\n                    if (sanctions.supports.includes(network.code)) {\n                        cpHelpers.waitingPopup(CryptoPayLang.checkingSanctions);\n                        let result = await checkSanctions(connectedAccount);\n                        if (result.status) {\n                            let msg = CryptoPayLang.sanctionedMessage;\n                            if (result.source) {\n                                msg = msg.replace('{source}', CryptoPayLang.source + \" \" + result.source);\n                            } else {\n                                msg = msg.replace('{source}', '');\n                            }\n                            return {\n                                error: true,\n                                message: msg,\n                            }\n                        } else if (result.error) {\n                            return {\n                                error: true,\n                                message: result.message,\n                            }\n                        }\n                        cpHelpers.closePopup();\n                    }\n                }, 'wp_sanctions');\n            }\n        })();\n        ;(($) => {\n        \n            const instant = CryptoPayVars.instant;\n        \n            if ($(\".start-cryptopay-instant\").length > 0) {\n                let symbol = $(\".woocommerce-Price-currencySymbol\").html();\n                $(document).on('change keyup', '[name=\"quantity\"]', function (e) {\n                    let quantity = $(this).val();\n                    let total = parseFloat((instant.amount * quantity)).toFixed(instant.decimals);\n                    $(\".woocommerce-Price-amount bdi\").html(\n                        `<span class=\"woocommerce-Price-currencySymbol\">${symbol}</span>${total}`\n                    );\n                });\n            }\n        \n            let startedApp;\n            const autoStarter = (productId, quantity, total) => {\n                let order = {\n                    amount: parseFloat(total),\n                    currency: instant.currency\n                }\n        \n                let params = {\n                    quantity, \n                    productId, \n                    instant: true\n                }\n        \n                if (!startedApp) {\n                    startedApp = CryptoPayApp.start(order, params);\n                } else {\n                    startedApp.reStart(order, params);\n                }\n            }\n            $(document).on('click', \".start-cryptopay-instant\", function (e) {\n                if (!instant) {\n                    return cpHelpers.errorPopup(CryptoPayLang.instantPaymentMsg);\n                }\n                \n                CryptoPayModal.open();\n        \n                let productId = instant.productId;\n                let quantity = $('[name=\"quantity\"]').val();\n        \n                let total = parseFloat((instant.amount * quantity)).toFixed(instant.decimals);\n        \n                autoStarter(productId, quantity, total);\n            });\n        })(jQuery);\n    });\n})(jQuery);"]}