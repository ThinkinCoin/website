{"version":3,"sources":["checkout.js"],"names":["$","document","ready","let","startedApp","handleUnloadEvent","navigator","userAgent","indexOf","documentMode","e","preventDefault","printError","errorMessage","scrollElement","remove","$form","prepend","removeClass","unblock","find","trigger","length","animate","scrollTop","offset","top","body","async","checkFormProcess","network","currency","data","serialize","params","CryptoPayVars","res","JSON","stringify","await","Promise","ajax","type","dataType","url","wc_checkout_params","checkout_url","success","response","window","off","init","store","payment","setInit","resolve","reload","location","refresh","message","messages","CryptoPayLang","defaultErrorMsg","error","jqXHR","textStatus","errorThrown","complete","cpHelpers","closePopup","CryptoPayApp","dynamicData","add","wcForm","formToObj","CryptoPayConfig","events","ctx","disableAutoQr","waitingPopup","checkingForm","order","paymentCurrency","Object","assign","on","reStart","start","jQuery"],"mappings":"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","file":"checkout.min.js","sourcesContent":[";(($) => {  \n    $(document).ready(() => {\n        // CryptoPay JS App\n        let startedApp;\n\n        $form = $('form.checkout');\n\n        function handleUnloadEvent() {\n            if((navigator.userAgent.indexOf('MSIE') !== -1 ) || (!!document.documentMode)) {\n                // IE handles unload events differently than modern browsers\n                e.preventDefault();\n                return undefined;\n            }\n\n            return true;\n        }\n\n        function scrollToNotices() {\n            var scrollElement = $('.woocommerce-NoticeGroup-updateOrderReview, .woocommerce-NoticeGroup-checkout');\n    \n            if ( ! scrollElement.length ) {\n                scrollElement = $form;\n            }\n            \n            if ( scrollElement.length ) {\n                $( 'html, body' ).animate( {\n                    scrollTop: ( scrollElement.offset().top - 100 )\n                }, 1000 );\n            }\n        }\n\n        function printError(errorMessage) {\n            $('.woocommerce-NoticeGroup-checkout, .woocommerce-error, .woocommerce-message').remove();\n            $form.prepend('<div class=\"woocommerce-NoticeGroup woocommerce-NoticeGroup-checkout\">' + errorMessage + '</div>');\n            $form.removeClass('processing').unblock();\n            $form.find('.input-text, select, input:checkbox').trigger('validate').trigger('blur');\n            scrollToNotices();\n            $(document.body).trigger('checkout_error' , [errorMessage]);\n        }\n\n        async function checkFormProcess(network, currency) {\n            let data = $form.serialize();\n            const params = CryptoPayVars.params || {};\n            data += '&cp_params=' + JSON.stringify(params);\n            data += '&cp_network=' + JSON.stringify(network);\n            data += '&cp_currency=' + JSON.stringify(currency);\n            let res = await new Promise((resolve) => {\n                $.ajax({\n                    data: data,\n                    type: 'POST',\n                    dataType: 'json',\n                    url: wc_checkout_params.checkout_url,\n                    success:\tfunction(response) {\n                        $(window).off('beforeunload', handleUnloadEvent);\n\n                        if (response.success) {\n                            $(\".woocommerce-NoticeGroup-checkout\").remove();\n                            if (response.data && response.data.init) {\n                                startedApp.store.payment.setInit(response.data.init);\n                            }\n                            resolve(null);\n                        } else {\n                            if (response.data) {\n                                if (true === response.data.reload) {\n                                    window.location.reload();\n                                    return;\n                                }\n    \n                                if (true === response.data.refresh) {\n                                    $(document.body).trigger('update_checkout');\n                                }\n                            }\n\n                            if (response.message || response.messages) {\n                                printError(response.message ? response.message : response.messages);\n                            } else {\n                                printError('<div class=\"woocommerce-error\">' + CryptoPayLang.defaultErrorMsg + '</div>'); \n                            }\n\n                            resolve({error: true});\n                        }\n                    },\n                    error:\tfunction(jqXHR, textStatus, errorThrown) {\n                        $(window).off('beforeunload', handleUnloadEvent);\n\n                        printError(\n                            '<div class=\"woocommerce-error\">' +\n                            (errorThrown || CryptoPayLang.defaultErrorMsg) +\n                            '</div>'\n                        );\n\n                        resolve({\n                            error: true,\n                        });\n                    },\n                    complete: function() {\n                        cpHelpers.closePopup();\n                        CryptoPayApp.dynamicData.add({\n                            wcForm: cpHelpers.formToObj('form.checkout')\n                        });\n                    }\n                });\n            });\n\n            return res;\n        }\n\n        if (CryptoPayConfig.init) {\n            CryptoPayApp.events.add('init', async (ctx) => {\n                ctx.disableAutoQr = true;\n            }, 'wc_checkout');\n            CryptoPayApp.events.add('payNow', (ctx) => {\n                cpHelpers.waitingPopup(CryptoPayLang.checkingForm);\n                return checkFormProcess(ctx.network, ctx.order.paymentCurrency);\n            }, 'wc_checkout');\n        } else {\n            CryptoPayApp.events.add('init', async (ctx) => {\n                ctx = Object.assign(ctx, (await checkFormProcess(ctx.network, ctx.currency)));\n            }, 'wc_checkout');\n        }\n    \n        $(document).on('updated_checkout', function () {\n            if (!startedApp) {\n                startedApp = CryptoPayApp.start(CryptoPayVars.order);\n            } else {\n                startedApp.reStart(CryptoPayVars.order);\n            }\n        });\n    \n        $('form.checkout').on('change', 'input[name=\"payment_method\"]', function() {\n            $(document.body).trigger('update_checkout');\n        });\n    });\n})(jQuery);"]}